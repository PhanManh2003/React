{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\day4\\\\lesson1\\\\src\\\\provider\\\\AppProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AppContext from \"./Context\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppProvider({\n  children\n}) {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [stuDetails, setStuDetails] = useState([]);\n  useEffect(() => {\n    // cách 1: dùng fetch\n    // fetch(\"https://jsonplaceholder.typicode.com/todos\")\n    //   .then((response) => response.json())\n    //   .then((response) => setTodos(response));\n\n    // cách 2: dùng axios\n    // async await\n    const fetchFunction = async () => {\n      // lấy data từ API có lúc sẽ xảy ra lỗi\n      try {\n        // get data từ API\n        const resStudent = await axios.get(\"http://localhost:9999/students\"); // muốn dùng await thì phải dùng async\n        setStudents(resStudent.data);\n        const resSubject = await axios.get(\"http://localhost:9999/subjects\"); // muốn dùng await thì phải dùng async\n        setSubjects(resSubject.data);\n        const resStuDetails = await axios.get(\"http://localhost:9999/student_details\"); // muốn dùng await thì phải dùng async\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFunction();\n  }, []);\n  const data = {\n    // mặc định truyền cho con ở đây cứ thế mà áp dụng\n    // sau khi lấy và set xong thì vứt nó vào đây\n    students,\n    setStudents,\n    subjects,\n    setSubjects\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n_s(AppProvider, \"1ySDrVdIyGwKWn20RleniVdUhkU=\");\n_c = AppProvider;\nexport default AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useEffect","AppContext","axios","jsxDEV","_jsxDEV","AppProvider","children","_s","students","setStudents","subjects","setSubjects","stuDetails","setStuDetails","fetchFunction","resStudent","get","data","resSubject","resStuDetails","error","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/day4/lesson1/src/provider/AppProvider.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AppContext from \"./Context\";\r\nimport axios from \"axios\";\r\n\r\nfunction AppProvider({ children }) {\r\n  const [students, setStudents] = useState([]);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [stuDetails, setStuDetails] = useState([]);\r\n  useEffect(() => {\r\n    // cách 1: dùng fetch\r\n    // fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n    //   .then((response) => response.json())\r\n    //   .then((response) => setTodos(response));\r\n\r\n    // cách 2: dùng axios\r\n    // async await\r\n    const fetchFunction = async () => {\r\n      // lấy data từ API có lúc sẽ xảy ra lỗi\r\n      try {\r\n        // get data từ API\r\n        const resStudent = await axios.get(\"http://localhost:9999/students\"); // muốn dùng await thì phải dùng async\r\n        setStudents(resStudent.data);\r\n        const resSubject = await axios.get(\"http://localhost:9999/subjects\"); // muốn dùng await thì phải dùng async\r\n        setSubjects(resSubject.data);\r\n        const resStuDetails = await axios.get(\"http://localhost:9999/student_details\"); // muốn dùng await thì phải dùng async\r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchFunction();\r\n  }, []);\r\n\r\n  const data = {\r\n    // mặc định truyền cho con ở đây cứ thế mà áp dụng\r\n    // sau khi lấy và set xong thì vứt nó vào đây\r\n    students,\r\n    setStudents,\r\n    subjects,\r\n    setSubjects,\r\n  };\r\n\r\n  return <AppContext.Provider value={data}>{children}</AppContext.Provider>;\r\n}\r\n\r\nexport default AppProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,WAAW;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChDC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;;IAEA;IACA;IACA,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC;MACA,IAAI;QACF;QACA,MAAMC,UAAU,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC;QACtEP,WAAW,CAACM,UAAU,CAACE,IAAI,CAAC;QAC5B,MAAMC,UAAU,GAAG,MAAMhB,KAAK,CAACc,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC;QACtEL,WAAW,CAACO,UAAU,CAACD,IAAI,CAAC;QAC5B,MAAME,aAAa,GAAG,MAAMjB,KAAK,CAACc,GAAG,CAAC,uCAAuC,CAAC,CAAC,CAAC;MAElF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACDN,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,IAAI,GAAG;IACX;IACA;IACAT,QAAQ;IACRC,WAAW;IACXC,QAAQ;IACRC;EACF,CAAC;EAED,oBAAOP,OAAA,CAACH,UAAU,CAACsB,QAAQ;IAACC,KAAK,EAAEP,IAAK;IAAAX,QAAA,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC3E;AAACrB,EAAA,CAvCQF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}